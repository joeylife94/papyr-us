refactor(server): 서버 안정성 확보를 위한 구조 리팩토링

E2E 테스트 실패의 근본 원인으로 추정되는 서버의 구조적 불안정성 문제를 해결하기 위해 대규모 리팩토링을 진행했습니다.

- **서버 진입점 통합**:
  - `index.ts`와 `production.ts`로 분리되어 있던 서버 실행 로직을 `index.ts` 하나로 통합했습니다.
  - `NODE_ENV` 환경 변수에 따라 개발/프로덕션 모드를 모두 처리하도록 변경하여, 환경 간의 동작 차이로 인한 잠재적 버그를 제거했습니다.

- **데이터베이스 연결 관리 개선**:
  - 서버의 메인 진입점에서 `DBStorage` 인스턴스를 단 한 번만 생성하도록 보장했습니다.
  - 모든 API 라우트와 서비스(`socket.io` 등)에 의존성 주입(DI) 방식으로 단일 `storage` 인스턴스를 전달하여, 데이터베이스 연결 풀이 여러 번 생성되어 발생할 수 있는 문제를 원천적으로 차단했습니다.

- **코드 단순화**:
  - `storage.ts`에서 불필요한 `IStorage` 인터페이스와 `MemStorage`를 제거하여 데이터베이스 관리 로직을 단순화하고 명확하게 만들었습니다.

- **빌드 스크립트 수정**:
  - 서버 진입점 통합에 따라 `package.json`의 `build` 스크립트와 `docker-compose.yml`의 실행 명령을 새로운 구조에 맞게 수정했습니다.
