name: CI

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check (tsc)
        run: npm run check

      - name: Lint
        run: npm run lint

      - name: Run unit & integration tests
        run: npm test

      - name: Build (optional)
        run: npm run build

  playwright-e2e:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U papyrus_user" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Wait for Postgres
        run: |
          echo "Waiting for postgres to be ready..."
          for i in `seq 1 30`; do
            pg_isready -h localhost -p 5432 -U papyrus_user && break
            echo "Waiting... ($i)"
            sleep 2
          done

      - name: Run DB migrations & seed
        env:
          DATABASE_URL: postgresql://${{ secrets.PG_USER }}:${{ secrets.PG_PASSWORD }}@localhost:5432/${{ secrets.PG_DB }}
        run: |
          npm run test:db:migrate
          npm run test:db:seed

      - name: Start server for E2E
        env:
          PORT: 5001
          DATABASE_URL: postgresql://${{ secrets.PG_USER }}:${{ secrets.PG_PASSWORD }}@localhost:5432/${{ secrets.PG_DB }}
          NODE_ENV: test
          E2E_USE_STORAGE_STATE: '0'
        run: |
          npm run start:e2e &
          echo "Waiting for server to be ready..."
          for i in `seq 1 60`; do
            if curl -sSf http://localhost:5001/ >/dev/null; then
              echo "Server is up"; break
            fi
            sleep 2
          done

      - name: Run Playwright E2E tests (chromium only)
        run: npx playwright test --project=chromium --reporter=dot,html

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload Playwright artifacts (screenshots, videos, traces, test-results)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            playwright-report
            test-results
            playwright-report/**/screenshots
            playwright-report/**/videos
            playwright-report/**/traces
            playwright-report/**/attachments
